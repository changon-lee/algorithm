#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int max(int a, int b){
	if(a>b){
		return a;
	}
	else{
		return b;
	}
}
int find_index(int arr[], int find){
	int i;
	int len = sizeof(arr)/sizeof(int);
	for(i=1;i<len;i+=2){
		if(arr[i] = find){
			printf("!!%d!!\n",(i/2)+1);
		       	return ((i/2)+1);
	}

	return 0;	
}
int main(){
	// Find Val(i,w)
	// if(w >= weight[i])
	// -> max(Val(i-1,w), Val(i-1,w-weight[i])+value[i])
	// else
	// -> Val(i-1,w)
	int i,n;
	int arr[10];
	
	for(i=0; i<10; i++){
		scanf("%d",&arr[i]);
	}
	
	int w, index;
	int row = ((sizeof(arr)/sizeof(int))/2) - 1;
	int column = arr[8];
	int v[row+1][column+1];
	for(i=0;i<=column;i++){
		v[0][i] = 0;
	}
	for(i=0;i<=row;i++){
		v[i][0] = 0;
	}
	for(i=1;i<=row;i++){
		for(w=1;w<=column;w++){
			if(arr[2*(i-1)] <= w){
				v[i][w] = max(v[i-1][w],v[i-1][w-arr[2*(i-1)]]+arr[2*i-1]);
			}
			else{
				v[i][w] = v[i-1][w];
			}
			printf("%d ",v[i][w]);
		}
		printf("\n");
	}

	int result = v[row][column];
	int res = result;
	//Backtracking
	for(i=row;(i>0&&res>0);i--){
		if(res == v[i-1][column]){
			printf("conti\n");
			continue;
		}
		else{
			index = find_index(arr,v[i-1][column]);
			printf("%d ",index);
			res = res - v[i-1][column];
			column = column - arr[2*(index-1)];
		}
	}
	printf("%d\n",result );

}

